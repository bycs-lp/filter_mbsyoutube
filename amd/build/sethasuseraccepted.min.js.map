{"version":3,"sources":["../src/sethasuseraccepted.js"],"names":["mycourseid","init","courseid","initClickEvent","MutationObserver","observe","document","subtree","childList","onVideoAcceptanceChange","provider","Ajax","call","methodname","args","done","response","location","reload","fail","Notification","exception","unbind","click","e","stopPropagation"],"mappings":"kMAwBA,OACA,OACA,O,sDAEIA,CAAAA,CAAU,CAAG,C,QAEG,QAAPC,CAAAA,IAAO,CAACC,CAAD,CAAc,CAC9BF,CAAU,CAAGE,CAAb,CACAC,CAAc,GAEd,GAAIC,CAAAA,gBAAJ,CAAqBD,CAArB,EAAqCE,OAArC,CAA6CC,QAA7C,CACA,CACIC,OAAO,GADX,CAEIC,SAAS,GAFb,CADA,CAKH,C,CAMD,QAASC,CAAAA,CAAT,CAAiCT,CAAjC,CAA6CU,CAA7C,CAAuD,CACnDC,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,yCADL,CAEPC,IAAI,CAAE,CACFJ,QAAQ,CAAEA,CADR,CAEFR,QAAQ,CAAEF,CAFR,CAFC,CAMPe,IAAI,CAAE,cAAUC,CAAV,CAAoB,CACtB,GAAIA,CAAJ,CAAc,CACVC,QAAQ,CAACC,MAAT,EACH,CACJ,CAVM,CAWPC,IAAI,CAAEC,UAAaC,SAXZ,CAAD,CAAV,CAaH,CAKD,QAASlB,CAAAA,CAAT,EAA0B,CAEtB,cAAE,qBAAF,EAAyBmB,MAAzB,GAAkCC,KAAlC,CAAwC,SAASC,CAAT,CAAY,CAChDf,CAAuB,CAACT,CAAD,CAAa,SAAb,CAAvB,CACAwB,CAAC,CAACC,eAAF,EACH,CAHD,CAIH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript set youtube provider cache .\n *\n * @module     filter_mbsyoutube/setvideoprovidercache\n * @package    filter_mbsyoutube\n * @copyright  2019 Peter Mayer, ISB Bayern, peter.mayer@isb.bayern.de\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nlet mycourseid = 0;\n\nexport const init = (courseid) => {\n    mycourseid = courseid;\n    initClickEvent();\n    // The button might not be on the document yet: Observe the DOM for a change.\n    new MutationObserver(initClickEvent).observe(document,\n    {\n        subtree: true,\n        childList: true\n    });\n}\n\n/**\n * Mark a medium as accepted.\n * @param {string} provider\n */\nfunction onVideoAcceptanceChange(mycourseid, provider) {\n    Ajax.call([{\n        methodname: 'filter_mbsyoutube_setvideoprovidercache',\n        args: {\n            provider: provider,\n            courseid: mycourseid\n        },\n        done: function (response) {\n            if (response) {\n                location.reload();\n            }\n        },\n        fail: Notification.exception\n    }]);\n}\n\n/**\n * Initialize the click event\n */\nfunction initClickEvent() {\n    // First unbind the click event, because it could be bound multiple times.\n    $('.mbsyoutube-confirm').unbind().click(function(e) {\n        onVideoAcceptanceChange(mycourseid, \"YouTube\");\n        e.stopPropagation();\n    });\n}\n\n"],"file":"sethasuseraccepted.min.js"}