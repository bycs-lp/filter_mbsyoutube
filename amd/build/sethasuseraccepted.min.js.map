{"version":3,"file":"sethasuseraccepted.min.js","sources":["../src/sethasuseraccepted.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript set youtube provider cache .\n *\n * @module     filter_mbsyoutube/sethasuseraccepted\n * @copyright  2019 Peter Mayer, ISB Bayern, peter.mayer@isb.bayern.de\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport {init as initYTPlayers} from 'filter_mbsyoutube/youtube_api';\n\nlet mycourseid = 0;\n\nexport const init = (courseid) => {\n    mycourseid = courseid;\n    initClickEvent();\n    // The button might not be on the document yet: Observe the DOM for a change.\n    new MutationObserver(initClickEvent).observe(document,\n    {\n        subtree: true,\n        childList: true\n    });\n};\n\n/**\n * Mark a medium as accepted.\n * @param {number} mycourseid\n * @param {string} provider\n */\nfunction onVideoAcceptanceChange(mycourseid, provider) {\n    Ajax.call([{\n        methodname: 'filter_mbsyoutube_setvideoprovidercache',\n        args: {\n            provider: provider,\n            courseid: mycourseid\n        },\n        done: function(response) {\n            if (response) {\n                var ytscript = document.createElement('script');\n                ytscript.onload = function() {\n                    initYTPlayers(true);\n                };\n                ytscript.src = 'https://www.youtube.com/iframe_api';\n                document.head.appendChild(ytscript);\n            }\n        },\n        fail: Notification.exception\n    }]);\n}\n\n/**\n * Initialize the click event\n */\nfunction initClickEvent() {\n    // First unbind the click event, because it could be bound multiple times.\n    $('.mbsyoutube-confirm').unbind().click(function(e) {\n        onVideoAcceptanceChange(mycourseid, \"YouTube\");\n        e.stopPropagation();\n    });\n}\n\n"],"names":["mycourseid","initClickEvent","unbind","click","e","provider","call","methodname","args","courseid","done","response","ytscript","document","createElement","onload","src","head","appendChild","fail","Notification","exception","onVideoAcceptanceChange","stopPropagation","MutationObserver","observe","subtree","childList"],"mappings":";;;;;;;sNA4BIA,WAAa,WA0CRC,qCAEH,uBAAuBC,SAASC,OAAM,SAASC,aA1BpBJ,WAAYK,wBACpCC,KAAK,CAAC,CACPC,WAAY,0CACZC,KAAM,CACFH,SAAUA,SACVI,SAAUT,YAEdU,KAAM,SAASC,aACPA,SAAU,KACNC,SAAWC,SAASC,cAAc,UACtCF,SAASG,OAAS,kCACA,IAElBH,SAASI,IAAM,qCACfH,SAASI,KAAKC,YAAYN,YAGlCO,KAAMC,sBAAaC,aAUnBC,CAAwBtB,WAAY,WACpCI,EAAEmB,mCA5CWd,WACjBT,WAAaS,SACbR,qBAEIuB,iBAAiBvB,gBAAgBwB,QAAQZ,SAC7C,CACIa,SAAS,EACTC,WAAW"}