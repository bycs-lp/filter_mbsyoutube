{"version":3,"sources":["../src/sethasuseraccepted.js"],"names":["define","$","ajax","notification","params","onVideoAcceptanceChange","provider","call","methodname","args","courseid","done","response","location","reload","fail","exception","initClickEvent","length","unbind","click","init","observer","MutationObserver","observe","document","subtree","attributes"],"mappings":"AAwBAA,OAAM,wCAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAAD,CAA+C,SAAUC,CAAV,CAAaC,CAAb,CAAmBC,CAAnB,CAAiC,CAElF,GAAIC,CAAAA,CAAJ,CAMA,QAASC,CAAAA,CAAT,CAAiCC,CAAjC,CAA2C,CACvCJ,CAAI,CAACK,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,yCADL,CAEPC,IAAI,CAAE,CACFH,QAAQ,CAAEA,CADR,CAEFI,QAAQ,CAAEN,CAAM,CAACM,QAFf,CAFC,CAMPC,IAAI,CAAE,cAAUC,CAAV,CAAoB,CACtB,GAAIA,CAAJ,CAAc,CACVC,QAAQ,CAACC,MAAT,EACH,CACJ,CAVM,CAWPC,IAAI,CAAEZ,CAAY,CAACa,SAXZ,CAAD,CAAV,CAaH,CAKD,QAASC,CAAAA,CAAT,EAA0B,CAEtB,GAAuC,CAAnC,EAAAhB,CAAC,CAAC,qBAAD,CAAD,CAAyBiB,MAA7B,CAA0C,CACtC,MACH,CAGDjB,CAAC,CAAC,qBAAD,CAAD,CAAyBkB,MAAzB,GAGAlB,CAAC,CAAC,qBAAD,CAAD,CAAyBmB,KAAzB,CAA+B,UAAY,CACvCf,CAAuB,CAAC,SAAD,CAC1B,CAFD,CAGH,CAED,MAAO,CACHgB,IAAI,CAAE,cAAUZ,CAAV,CAAgB,CAClBL,CAAM,CAAGK,CAAT,CAGA,GAAuC,CAAnC,EAAAR,CAAC,CAAC,qBAAD,CAAD,CAAyBiB,MAA7B,CAA0C,CACtCD,CAAc,GACd,MACH,CAGD,GAAIK,CAAAA,CAAQ,CAAG,GAAIC,CAAAA,gBAAJ,CAAqB,UAAY,CAE5C,GAAsC,CAAlC,CAAAtB,CAAC,CAAC,qBAAD,CAAD,CAAyBiB,MAA7B,CAAyC,CACrCD,CAAc,EACjB,CACJ,CALc,CAAf,CASAK,CAAQ,CAACE,OAAT,CAAiBC,QAAjB,CAA2B,CACvBC,OAAO,GADgB,CAEvBC,UAAU,GAFa,CAA3B,CAIH,CAxBE,CA0BV,CApEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript set youtube provider cache .\n *\n * @module     filter_mbsyoutube/setvideoprovidercache\n * @package    filter_mbsyoutube\n * @copyright  2019 Peter Mayer, ISB Bayern, peter.mayer@isb.bayern.de\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function ($, ajax, notification) {\n\n    var params;\n\n    /**\n     * Mark a medium as accepted.\n     * @param {string} provider\n     */\n    function onVideoAcceptanceChange(provider) {\n        ajax.call([{\n            methodname: 'filter_mbsyoutube_setvideoprovidercache',\n            args: {\n                provider: provider,\n                courseid: params.courseid\n            },\n            done: function (response) {\n                if (response) {\n                    location.reload();\n                }\n            },\n            fail: notification.exception\n        }]);\n    }\n\n    /**\n     * Initialize the click event\n     */\n    function initClickEvent() {\n        // Nothing to do, because there is no button to bind an event.\n        if ($('.mbsyoutube-confirm').length == 0) {\n            return;\n        }\n\n        // Unbind the click event, because otherwise the event could be bind multiple times.\n        $('.mbsyoutube-confirm').unbind();\n\n        // Now bind the click event.\n        $('.mbsyoutube-confirm').click(function () {\n            onVideoAcceptanceChange(\"YouTube\");\n        });\n    }\n\n    return {\n        init: function (args) {\n            params = args;\n\n            // If there is already a mbsembed yt confirm button then bind the click event.\n            if ($('.mbsyoutube-confirm').length != 0) {\n                initClickEvent();\n                return;\n            }\n\n            // If there is no yt confirm button. Observe the dome if there will be a change.\n            var observer = new MutationObserver(function () {\n                // Fired when a mutation occurs.\n                if ($('.mbsyoutube-confirm').length > 0) {\n                    initClickEvent();\n                }\n            });\n\n            // Define what element should be observed by the observer\n            // and what types of mutations trigger the callback\n            observer.observe(document, {\n                subtree: true,\n                attributes: true\n            });\n        }\n    };\n});"],"file":"sethasuseraccepted.min.js"}