{"version":3,"file":"youtube_api.min.js","sources":["../src/youtube_api.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript controller YouTube Videos.\n *\n * @module     filter_mbsyoutube/youtube_api\n * @copyright  2019 Peter Mayer, ISB Bayern, peter.mayer@isb.bayern.de\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nlet videos = {};\nlet players = {};\n\nexport const init = (loaded = false) => {\n    if (!loaded) {\n        // Need to wait for the load event, since the iframe_api might not be there yet.\n        window.addEventListener('load', initPlayer, false);\n    }\n\n    // If there is no mbsyoutube-ytiframe yet: Observe the DOM if there will be a change.\n    var observer = new MutationObserver(function() {\n        // Fired when a mutation occurs.\n        if (document.querySelectorAll('.mbsyoutube-ytiframe').length > 0) {\n            initPlayer();\n        }\n    });\n\n    // Define what element should be observed by the observer\n    // and what types of mutations trigger the callback\n    observer.observe(document, {\n        subtree: true,\n        childList: true\n    });\n};\n\n/**\n * Initialize the Players.\n */\nfunction initPlayer() {\n\n    document.querySelectorAll('.mbsyoutube-ytiframe').forEach(function(node) {\n        var playerid = node.id.split(\"___\");\n        var videoid = playerid[2];\n        var videouniqid = playerid[1];\n        getJsonObjectFromIdAttribut(videoid, 'data-extern', videouniqid);\n    });\n\n    loadPlayers();\n}\n\n/**\n * Initialise the players.\n */\nfunction loadPlayers() {\n    for (const [key, value] of Object.entries(videos)) {\n        createYouTubePlayer(value.videoid, value.ytparam, key);\n    }\n}\n\n/**\n * Create a YouTube player for a given video and add it to the players object.\n * @param {string} videoid\n * @param {*} ytparam\n * @param {string} uniqeid\n */\nfunction createYouTubePlayer(videoid, ytparam, uniqeid) {\n    const targetElement = document.getElementById('yt___' + uniqeid + '___' + videoid);\n    if (targetElement) {\n        targetElement.removeAttribute('hidden');\n    }\n    // eslint-disable-next-line no-undef\n    players[uniqeid] = new YT.Player('yt___' + uniqeid + '___' + videoid, {\n        videoId: videoid,\n        playerVars: ytparam,\n        events: {\n            'onError': catchError\n        }\n    });\n}\n\n/**\n * Catch errors.\n * @param {object} event\n */\nfunction catchError(event) {\n    if (event.data == 100) {\n        window.console.log(\"Error - The video is not accessible!\");\n    }\n}\n\n/**\n * Make a json object from a data attribute and add it to the video object.\n * @param {string} videoid\n * @param {string} attribut\n * @param {string} uniqid\n */\nfunction getJsonObjectFromIdAttribut(videoid, attribut, uniqid) {\n    var jsonobj = JSON.parse(\n        document.getElementById('yt___' + uniqid + '___' + videoid).getAttribute(attribut));\n    videos[uniqid] = {ytparam: jsonobj, videoid: videoid};\n}"],"names":["videos","players","initPlayer","document","querySelectorAll","forEach","node","playerid","id","split","videoid","attribut","uniqid","jsonobj","JSON","parse","getElementById","getAttribute","ytparam","getJsonObjectFromIdAttribut","key","value","Object","entries","createYouTubePlayer","loadPlayers","uniqeid","targetElement","removeAttribute","YT","Player","videoId","playerVars","events","catchError","event","data","window","console","log","loaded","addEventListener","observer","MutationObserver","length","observe","subtree","childList"],"mappings":";;;;;;;;IAuBIA,OAAS,GACTC,QAAU,YA2BLC,aAELC,SAASC,iBAAiB,wBAAwBC,SAAQ,SAASC,UAC3DC,SAAWD,KAAKE,GAAGC,MAAM,iBAuDAC,QAASC,SAAUC,YAChDC,QAAUC,KAAKC,MACfZ,SAASa,eAAe,QAAUJ,OAAS,MAAQF,SAASO,aAAaN,WAC7EX,OAAOY,QAAU,CAACM,QAASL,QAASH,QAASA,SAvDzCS,CAFcZ,SAAS,GAEc,cADnBA,SAAS,sBAW1B,MAAOa,IAAKC,SAAUC,OAAOC,QAAQvB,QACtCwB,oBAAoBH,MAAMX,QAASW,MAAMH,QAASE,KARtDK,YAkBKD,oBAAoBd,QAASQ,QAASQ,eACrCC,cAAgBxB,SAASa,eAAe,QAAUU,QAAU,MAAQhB,SACtEiB,eACAA,cAAcC,gBAAgB,UAGlC3B,QAAQyB,SAAW,IAAIG,GAAGC,OAAO,QAAUJ,QAAU,MAAQhB,QAAS,CAClEqB,QAASrB,QACTsB,WAAYd,QACZe,OAAQ,SACOC,uBASdA,WAAWC,OACE,KAAdA,MAAMC,MACNC,OAAOC,QAAQC,IAAI,sDAzEP,eAACC,+DACZA,QAEDH,OAAOI,iBAAiB,OAAQvC,YAAY,OAI5CwC,SAAW,IAAIC,kBAAiB,WAE5BxC,SAASC,iBAAiB,wBAAwBwC,OAAS,GAC3D1C,gBAMRwC,SAASG,QAAQ1C,SAAU,CACvB2C,SAAS,EACTC,WAAW"}