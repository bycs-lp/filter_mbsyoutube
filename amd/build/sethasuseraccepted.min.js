define("filter_mbsyoutube/sethasuseraccepted",["exports","jquery","core/ajax","core/notification","filter_mbsyoutube/youtube_api"],(function(_exports,_jquery,_ajax,_notification,_youtube_api){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript set youtube provider cache .
   *
   * @module     filter_mbsyoutube/sethasuseraccepted
   * @copyright  2019 Peter Mayer, ISB Bayern, peter.mayer@isb.bayern.de
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax),_notification=_interopRequireDefault(_notification);let mycourseid=0;function initClickEvent(){(0,_jquery.default)(".mbsyoutube-confirm").unbind().click((function(e){!function(mycourseid,provider){_ajax.default.call([{methodname:"filter_mbsyoutube_setvideoprovidercache",args:{provider:provider,courseid:mycourseid},done:function(response){if(response){var ytscript=document.createElement("script");ytscript.onload=function(){(0,_youtube_api.init)(!0)},ytscript.src="https://www.youtube.com/iframe_api",document.head.appendChild(ytscript)}},fail:_notification.default.exception}])}(mycourseid,"YouTube"),e.stopPropagation()}))}_exports.init=courseid=>{mycourseid=courseid,initClickEvent(),new MutationObserver(initClickEvent).observe(document,{subtree:!0,childList:!0})}}));

//# sourceMappingURL=sethasuseraccepted.min.js.map